Burp Suite


# Jython

www.jython.org/downloads.html
Download Jython Standalone Jar
Move to /Applications/
------------------------------------------------------------------------------------------------------------------------------------------------------

# Firefox plugins

Wappalyzer
Web Developer
------------------------------------------------------------------------------------------------------------------------------------------------------

# Set up

Open Burp
New project on disk > Choose file > burp-project > Save
Name: Base
Next
Use Burp defaults > Start Burp
------------------------------------------------------------------------------------------------------------------------------------------------------

# Import certificate

Open Firefox to http://burp
CA Certificate > Save File
Preferences > Advanced > Certificates > View Certificates > Authorities > Import
Select the certificate that you previously downloaded > Open
Check Trust this CA to identify websites > OK > OK
Restart Firefox
------------------------------------------------------------------------------------------------------------------------------------------------------

# Testing from home? Tunnel all your traffic over SSH to Kali running in Amazon EC2.

ssh -i amazon.pem ec2-user@kaliIP
sudo -i
vim /etc/proxychains.conf
Add a new last line: socks5 127.0.0.1 1080
exit
exit

ssh -D 1080 -f -N -i amazon.pem ec2-user@kaliIP

Open Burp locally.
User options > Connections > SOCKS Proxy
Check Use SOCKS proxy
SOCKS Proxy host: 127.0.0.1
SOCKS Proxy port: 1080
Check Do DNS lookups over SOCKS proxy

Open Firefox to http://whatismyipaddress.com
The IP address should be your Kali EC2.
Target > Site map: this should now populate
------------------------------------------------------------------------------------------------------------------------------------------------------

# Options

Target > Site map:
    Right click on any pane > View > Tabs
    Filter > restore defaults > Filter

Proxy > Options:
    Intercept Client Requests:
        Enable URL and move to the top.
        Select File extension > Edit: add jpeg.
        Copy contents > OK

    Intercept Server Responses:
        Enable Intercept responses based on the following rules.
        Disable Content type header.
        Enable URL and move to the top.
        Add: And, File extension, Does not match, Match condition: paste contents from above, OK

    Match & Replace:
          Scroll to the bottom and enable X-XXS-Protection: 0

Intruder > Options:
    Request Engine:
        Number of threads: 8
        Number of retries on network failure: 2

Extender:
    BApp Store > Refresh list
        Active Scann++, Additional Scanner Checks, Backslash Powered Scanner, CO2, CSRF Scanner,
        Error Message Checks, J2EEScan, Java Deserialization Scanner, JSON Beautifier, Paramalyzer, Retire.js,
        Site Map Fetcher, Software Version Reporter, Software Vulnerability Scanner, Wsdler, and XSS Validator
    Options:
        Python Environment > Select file > Browse to /Applications/jython-standalone-2.7.0.jar > Open

Project options > Misc:
    Burp Collaborator Server: Don't use Burp Collaborator
 
User options:
    Connections:
        Platform Authentication: enable Prompt for credentials on platform authentication failure
    Display:
        User Interface > Font size: 14
        HTTP Message Display > Font: Courier 14
    Misc:
        Proxy Interception: Always disable

Burp menu > User options > Save user options: user.json
This will provide you a starting point for all future scans.
------------------------------------------------------------------------------------------------------------------------------------------------------

# Methodology

# Scope
Firefox > surf to the target site and click on a couple of links.
Burp > Target > Site map > right click (RC) on the target URL > Add to scope
Target > Scope: you will see the URL listed in the top window
Target > Site map > Filter: enable Show only in-scope items > Filter

# Manually browse the app
Look for target.com/sitemap.
If present, hold down the command key and click on every link.
If not present, start exploring the target by clicking on every link on every page.
Continue until you have thoroughly browsed the target.

# Spider the app
Target > Site map > RC on the target URL > Spider this host
Spider > Control: watch the Requests made increase.
When the Requests and Forms queued are both zero, click Spider is running to stop.

Target > Site map > RC the target URL > Expand branch
Scroll to the very bottom.
RC on any folders that are greyed out > Delete branch
RC on any pages that are grey or red > Copy URL > paste into Firefox
    Or RC on any pages that are grey or red > GET Empty Response

# Brute force directories
Target > Site map > RC on the second line '/' > Send to Intruder
Intruder > Position > Attack type: Sniper
Clear §
On the top line, select the forward slash '/' after GET > Add §
Move the forward slash in front of the two symbols. It should look like: GET /§§

Payloads:
    Payload Sets
        Payload set: 1
        Payload type: Runtime file
    Payload Options:
        Select file > seclists > Discovery > Web_Content > raft-medium-directories.txt > Open
    Start attack

Clean up results when the attack completes:
    Filter > uncheck 4xx [request error] > Filter
    Click Status to sort by ascending.
    Select the first line with a 302 Status.
    Hold down shift and select the last line with a 302 Status.
    RC > Delete select items > Yes

Add remaining items to Site map:
    Scroll to the top of the list > sort by Payload
    Delete any blanks lines
    Move the Intruder window to the side so you can see the main window
    Target > Site map
    Compare the pages in the Site map to the Payloads in the Intruder window.
    Select a Payload that is not listed in the Site map
    RC > Request in browser > In current session
    Check: In future, just copy the URL and don't show this dialog > Copy
    Open a new tab in Firefox and paste.
    Repeat as necessary.

Target > Site map > RC the target URL > Engagement tools > Analyze target
Take a screenshot of the Summary tab.
These numbers will give you an idea of how large the app is.

# Grey folders
RC on grey folder > GET Empty Response
If the folder is still grey > RC > Delete branch > Yes

# Review comments
Target > Site map > RC the target URL > Engagement tools > Find comments
Sort by Item
Select each line > Response > look for sensitive information.
Use the search field at the bottom to search for href.
Copy/paste new URL into browser.

Engagement tools > Search: set-cookie
------------------------------------------------------------------------------------------------------------------------------------------------------

# Check for 404 and 500 errors
Enter a single tick (') at the end of a URL.
Modify the URL path.
Enter a single tick (') in any input field and submit the form.
------------------------------------------------------------------------------------------------------------------------------------------------------

# Brute force logins
Try to login
Proxy > History > find the POST request > RC > Send to Intruder

Intruder > Payloads > Attack type:
    Sniper:
        Uses a single wordlist against a single variable.
    Battering ram:
        Uses a single wordlist against all variables.
    Pitchfork:
        Uses multiple wordlists.
        For example: you have a known list of usernames and a related list of passwords.
        This will try the first username with the first password, then the second username with the second password, and so on.
        This is useful when checking for old accounts that should be deleted.
    Cluster bomb:
        Uses multiple wordlists.
        For example: you have a known list of usernames and a non-related list of passwords.
        This will try the first username with each password, then the second username with each password, and so on.

- Brute force basic authentication: Sniper
    Clear $
    Highlight the Authorization: Basic parameter > Add $
    This parameter is Base64 encoded.
    Copy the parameter > Decoder > paste in the top window
    Select the top drop-down menu on the right > Base64
    For example: YWRtaW46dGVzdDEyMw== decoded is admin:test123
    Notice there is a colon between the username and password
     
    Intruder > Payloads > Payload Sets > Payload type: Custom iterator
    List 1 with the possible Usernames and List 2 with possible passwords.
    Position: 1
        Type in the username (admin in our example) > Add
        Separator for position 1: : (colon in our example)
    Position: 2
        Load > choose your wordlist > Open
    Now we need to encode the whole string into Base64.
    <*** more stuff here ***>
    Start attack
     
- Brute force a password: Sniper
    Clear $
    Highlight the password you entered > Add $
    Intruder > Payloads > Payload Options
    Load > choose your password list > Open
    Start attack

- Brute force usernames and passwords: Cluster bomb
    Clear $
    Highlight the username you entered > Add $
    Highlight the password you entered > Add $
    Intruder > Payloads
        Payload Sets
            Payload set: 1
            Payload type: Simple list
        Payload Options
            Clear > Load: choose your username list > Open
        Payload Sets
            Payload set: 2
            Payload type: Simple list
        Payload Options
            Clear > Load: choose your password list > Open
        Start attack

Filter > uncheck 4xx [request error] > Filter
Click Status to sort by ascending.
Look for a 302 (redirect). This should be a successful login.
------------------------------------------------------------------------------------------------------------------------------------------------------

# Actively scan the app

Spider > Control > Spider is paused
Target > Site map > RC on the target URL > Actively scan this host
Active scanning wizard: check all boxes > Next > Ok
Scanner > Scan queue > RC > Resume scanner
Scanner > Scan queue > RC > Hide finished items
------------------------------------------------------------------------------------------------------------------------------------------------------

# Alerts

If you start seeing an increase in java.net.SocketException: Connection reset
Scanner > Options:
    Active Scanning Engine: enable Throttle between requestions: 200
    Active Scanning Optimization > Scan Accuracy: Normal
------------------------------------------------------------------------------------------------------------------------------------------------------

# Authentication

User options > Connections > Platform Authentication > Add
    Destination host: target URL
    Authentication type: Basic, NTLMv1, NTLMv2 or Digest
    Username and Password
Domain and Hostname are only used for NTLM.
OK
------------------------------------------------------------------------------------------------------------------------------------------------------

# CSRF

You should be logged into the web application.
Create a list of all POST requests that do not have a unique token called ‘CSRF_Token’. 

Proxy > HTTP history > Filter > Filter by search term
    ^POST((?!CSRF_Token).)*$
    Click Regex

RC on the first request > Engagement tools > Generate CSRF PoC
Test in browser > Copy
Open a new tab in Firefox > paste

Look for evidence that it executed whatever that HTTP request was supposed to do.

https://support.portswigger.net/customer/portal/articles/1965674-using-burp-to-test-for-cross-site-request-forgery-csrf-
https://portswigger.net/burp/help/suite_functions_csrfpoc.html
------------------------------------------------------------------------------------------------------------------------------------------------------

# Manually Validate Findings

File path traversal: RC in the Request body > Send to Repeater > modify the request 
XML Injection: Search in the Response body for http://www.w3.org/2001/XMLSchema. This is a false positive.
XSS: RC in the Request body > Request in browser > In current browser session
------------------------------------------------------------------------------------------------------------------------------------------------------

# Mobile app testing

Proxy > Options > Proxy Listeners > Add > Binding:
    Bind to port: 8081
    Bind to address: All interfaces
    OK > Yes

iPhone: Settings > Wi-Fi > select your network > scroll to the bottom
HTTP PROXY > Manual
    Server: your computer's IP address.
    Port: 8081

Safari > http://burp
    Select CA Certificate
    It will prompt you to install, then ask for your password
------------------------------------------------------------------------------------------------------------------------------------------------------

# Reporting

Select all remaining findings > RC > Report selected issues > Next 4x > enter file location > Next > Close

